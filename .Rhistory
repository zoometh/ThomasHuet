plot(grid)
x1
mean(df$x)
mean(df$y)
df$x
df$y
catA$x
runApp('teachings/stats/stats/spat-nearest')
plot(w, lwd = 3, main = "")
plot(w, lwd = 3, main = "")
# mean
points(x = mean(df$x),
y = mean(df$y),
pch = 16, cex = 4, col = "black")
src <- ppp(mean(df$x), mean(df$y), w)
text(src, labels = "S", cex = 1.5, col = "white")
# features
points(x = catA$x,
y = catA$y,
pch = 16, cex = 2, col = "red")
points(x = catB$x,
y = catB$y,
pch = 16, cex = 2, col = "green")
points(x = catC$x,
y = catC$y,
pch = 16, cex = 2, col = "blue")
points(x = catD$x,
y = catD$y,
pch = 16, cex = 2, col = "pink")
w
ceiling(w$yrange[1])
seq(1, ceiling(w$yrange[1]))
seq(ceiling(w$yrange[1]), seq(1, ceiling(w$yrange[2])))
seq(ceiling(w$yrange[1]), ceiling(w$yrange[2]))
seq(flor(w$yrange[1]), ceiling(w$yrange[2]))
seq(floor(w$yrange[1]), ceiling(w$yrange[2]))
x2 <- x1 <- seq(floor(w$yrange[1]), ceiling(w$yrange[2]))
# x2 <- ceiling(w$yrange[2])
grid <- expand.grid(x1, x2)
names(grid) <- c("x1", "x2")
coordinates(grid) <- ~x1 + x2
gridded(grid) <- TRUE
plot(w, lwd = 3, main = "")
plot(grid)
# mean
points(x = mean(df$x),
y = mean(df$y),
pch = 16, cex = 4, col = "black")
src <- ppp(mean(df$x), mean(df$y), w)
text(src, labels = "S", cex = 1.5, col = "white")
# features
points(x = catA$x,
y = catA$y,
pch = 16, cex = 2, col = "red")
points(x = catB$x,
y = catB$y,
pch = 16, cex = 2, col = "green")
points(x = catC$x,
y = catC$y,
pch = 16, cex = 2, col = "blue")
points(x = catD$x,
y = catD$y,
pch = 16, cex = 2, col = "pink")
pts <- ppp(df$x, df$y, w)
text(pts, labels = rownames(df), cex = 1, pos = 1)
runApp('teachings/stats/stats/spat-nearest')
df
ggplot(df, aes(color = color)) +
geom_point(aes(y = 0, x = dist.to.mean, size = 1.5)) +
geom_text_repel(aes(y = 0, x = dist.to.mean, label = rownames(df)))
# geom_text(aes(y = 0, x = dist.to.mean, label = round(dist.to.mean, 2, cex = .5, vjust = .5))) +
theme_bw() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_color_identity(guide = "legend", name = "features", breaks = df$color, label = df$feat)
ggplot(df, aes(color = color)) +
geom_point(aes(y = 0, x = dist.to.mean, size = 1.5)) +
geom_text_repel(aes(y = 0, x = dist.to.mean, label = rownames(df))) +
# geom_text(aes(y = 0, x = dist.to.mean, label = round(dist.to.mean, 2, cex = .5, vjust = .5))) +
theme_bw() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_color_identity(guide = "legend", name = "features", breaks = df$color, label = df$feat)
library(ggrepel)
ggplot(df, aes(color = color)) +
geom_point(aes(y = 0, x = dist.to.mean, size = 1.5)) +
geom_text_repel(aes(y = 0, x = dist.to.mean, label = rownames(df))) +
# geom_text(aes(y = 0, x = dist.to.mean, label = round(dist.to.mean, 2, cex = .5, vjust = .5))) +
theme_bw() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_color_identity(guide = "legend", name = "features", breaks = df$color, label = df$feat)
df <- rbind(catA, catB, catC, catD)
# distances to the mean
dist.to.mean <- crossdist(df$x, df$y,
rep(mean(df$x), nrow(df)),
rep(mean(df$x), nrow(df)))
df$dist.to.mean <- dist.to.mean[ , 1]
km <- pairwise.wilcox.test(df$dist.to.mean, df$feat,
p.adjust.method = "BH")
df.colors <- data.frame(feat = c("A", "B", "C", "D"),
color = c("red", "green", "blue", "pink"))
df <- merge(df, df.colors, by = "feat", all.x = T)
ggplot(df, aes(color = color)) +
geom_point(aes(y = 0, x = dist.to.mean, size = 1.5)) +
geom_text_repel(aes(y = 0, x = dist.to.mean, label = rownames(df))) +
# geom_text(aes(y = 0, x = dist.to.mean, label = round(dist.to.mean, 2, cex = .5, vjust = .5))) +
theme_bw() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_color_identity(guide = "legend", name = "features", breaks = df$color, label = df$feat)
df
rownames(df)
nb.pts <- 4
margins <- .5
catA <- data.frame(x = mean(x1)+runif(nb.pts, 0, 1),
y = mean(x1)+runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1)+runif(nb.pts, 0, 3),
y = mean(x1)+runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1)+runif(nb.pts, 1, 5),
y = mean(x1)+runif(nb.pts, 1, 5),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1)+runif(nb.pts, 3, 5),
y = mean(x1)+runif(nb.pts, 3, 5),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
w <- as.owin(c(min(df$x) - margins, max(df$x) + margins,
min(df$y) - margins, max(df$y) + margins))
x2 <- x1 <- seq(floor(w$yrange[1]), ceiling(w$yrange[2]))
# TODO: add grid
#print(x2)
# x1 <- ceiling(w$yrange[1])
# x2 <- ceiling(w$yrange[2])
grid <- expand.grid(x1, x2)
names(grid) <- c("x1", "x2")
coordinates(grid) <- ~x1 + x2
gridded(grid) <- TRUE
plot(w, lwd = 3, main = "")
plot(grid)
# mean
points(x = mean(df$x),
y = mean(df$y),
pch = 16, cex = 4, col = "black")
src <- ppp(mean(df$x), mean(df$y), w)
text(src, labels = "S", cex = 1.5, col = "white")
# features
points(x = catA$x,
y = catA$y,
pch = 16, cex = 2, col = "red")
points(x = catB$x,
y = catB$y,
pch = 16, cex = 2, col = "green")
points(x = catC$x,
y = catC$y,
pch = 16, cex = 2, col = "blue")
points(x = catD$x,
y = catD$y,
pch = 16, cex = 2, col = "pink")
pts <- ppp(df$x, df$y, w)
text(pts, labels = rownames(df), cex = 1, pos = 1)
rownames(df)
catA <- data.frame(x = mean(x1)+runif(nb.pts, 0, 1),
y = mean(x1)+runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1)+runif(nb.pts, 0, 3),
y = mean(x1)+runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1)+runif(nb.pts, 1, 5),
y = mean(x1)+runif(nb.pts, 1, 5),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1)+runif(nb.pts, 3, 5),
y = mean(x1)+runif(nb.pts, 3, 5),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
rownames(df)
df <- rbind(catA, catB, catC, catD)
# distances to the mean
dist.to.mean <- crossdist(df$x, df$y,
rep(mean(df$x), nrow(df)),
rep(mean(df$x), nrow(df)))
df$dist.to.mean <- dist.to.mean[ , 1]
km <- pairwise.wilcox.test(df$dist.to.mean, df$feat,
p.adjust.method = "BH")
df.colors <- data.frame(feat = c("A", "B", "C", "D"),
color = c("red", "green", "blue", "pink"))
rownames(df)
df <- merge(df, df.colors, by = "feat", all.x = T)
rownames(df)
x1 <- seq(1:input$x1)
catA <- data.frame(x = mean(x1)+runif(nb.pts, 0, 1),
y = mean(x1)+runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1)+runif(nb.pts, 0, 3),
y = mean(x1)+runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1)+runif(nb.pts, 1, 5),
y = mean(x1)+runif(nb.pts, 1, 5),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1)+runif(nb.pts, 3, 5),
y = mean(x1)+runif(nb.pts, 3, 5),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
# distances to the mean
dist.to.mean <- crossdist(df$x, df$y,
rep(mean(df$x), nrow(df)),
rep(mean(df$x), nrow(df)))
df$dist.to.mean <- dist.to.mean[ , 1]
km <- pairwise.wilcox.test(df$dist.to.mean, df$feat,
p.adjust.method = "BH")
df.colors <- data.frame(feat = c("A", "B", "C", "D"),
color = c("red", "green", "blue", "pink"))
df.rownames <- rownames(df)
df <- merge(df, df.colors, by = "feat", all.x = T)
rownames(df) <- df.rownames
ggplot(df, aes(color = color)) +
geom_point(aes(y = 0, x = dist.to.mean, size = 1.5)) +
geom_text_repel(aes(y = 0, x = dist.to.mean, label = rownames(df))) +
# geom_text(aes(y = 0, x = dist.to.mean, label = round(dist.to.mean, 2, cex = .5, vjust = .5))) +
theme_bw() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_color_identity(guide = "legend", name = "features", breaks = df$color, label = df$feat)
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
x1 <- seq(1:10)
nb.pts <- 4
runif(nb.pts, 0, 1)
runApp('teachings/stats/stats/spat-nearest')
runif(nb.pts, 3, 6)
runApp('teachings/stats/stats/spat-nearest')
mean(x1)
runif(nb.pts, 0, 1)
mean(x1) + runif(nb.pts, 0, 1)
mean(x1) + runif(nb.pts, 0, 1)
mean(x1) + runif(nb.pts, 0, 3)
runif(nb.pts, 0, 3)
runif(nb.pts, 0, 1)
catA <- data.frame(x = mean(x1) + runif(nb.pts, 0, 1),
y = mean(x1) + runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1) + runif(nb.pts, 0, 3),
y = mean(x1) + runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1) + runif(nb.pts, 2, 4),
y = mean(x1) + runif(nb.pts, 2, 4),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1) + runif(nb.pts, 3, 6),
y = mean(x1) + runif(nb.pts, 3, 6),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
df
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
nb.pts <- 5
x1 <- seq(1:10)
nb.pts <- 5
x1 <- seq(1:10)
catA <- data.frame(x = mean(x1) + runif(nb.pts, 0, 1),
y = mean(x1) + runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1) + runif(nb.pts, 0, 3),
y = mean(x1) + runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1) + runif(nb.pts, 2, 4),
y = mean(x1) + runif(nb.pts, 2, 4),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1) + runif(nb.pts, 3, 6),
y = mean(x1) + runif(nb.pts, 3, 6),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
# distances to the mean
dist.to.mean <- crossdist(df$x, df$y,
rep(mean(df$x), nrow(df)),
rep(mean(df$x), nrow(df)))
df$dist.to.mean <- dist.to.mean[ , 1]
km <- pairwise.wilcox.test(df$dist.to.mean, df$feat,
p.adjust.method = "BH")
df.colors <- data.frame(feat = c("A", "B", "C", "D"),
color = c("red", "green", "blue", "pink"))
df.rownames <- rownames(df)
df <- merge(df, df.colors, by = "feat", all.x = T)
rownames(df) <- df.rownames
rownames(df)
ggplot(df, aes(color = color)) +
geom_point(aes(y = 0, x = dist.to.mean, size = 1.5)) +
geom_text_repel(aes(y = 0, x = dist.to.mean, label = rownames(df), color = "black")) +
# geom_text(aes(y = 0, x = dist.to.mean, label = round(dist.to.mean, 2, cex = .5, vjust = .5))) +
theme_bw() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_color_identity(guide = "legend", name = "features", breaks = df$color, label = df$feat)
df
runApp('teachings/stats/stats/spat-nearest')
runApp()
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
nb.pts <- 4
catA <- data.frame(x = mean(x1) + runif(nb.pts, 0, 1),
y = mean(x1) + runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1) + runif(nb.pts, 0, 3),
y = mean(x1) + runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1) + runif(nb.pts, 2, 4),
y = mean(x1) + runif(nb.pts, 2, 4),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1) + runif(nb.pts, 3, 6),
y = mean(x1) + runif(nb.pts, 3, 6),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
# distances to the mean
dist.to.mean <- crossdist(df$x, df$y,
rep(mean(df$x), nrow(df)),
rep(mean(df$x), nrow(df)))
df$dist.to.mean <- dist.to.mean[ , 1]
km <- pairwise.wilcox.test(df$dist.to.mean, df$feat,
p.adjust.method = "BH")
df.colors <- data.frame(feat = c("A", "B", "C", "D"),
color = c("red", "green", "blue", "pink"))
df.rownames <- rownames(df)
df <- merge(df, df.colors, by = "feat", all.x = T)
rownames(df) <- df.rownames
ggplot(df, aes(color = color)) +
geom_point(aes(y = 0, x = dist.to.mean, size = 1.5)) +
geom_text_repel(aes(y = 0, x = dist.to.mean, label = rownames(df), color = "black")) +
# geom_text(aes(y = 0, x = dist.to.mean, label = round(dist.to.mean, 2, cex = .5, vjust = .5))) +
theme_bw() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_color_identity(guide = "legend", name = "features", breaks = df$color, label = df$feat)
runApp('teachings/stats/stats/spat-nearest')
df
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
rownames(df)
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
nb.pts <- 5
set.seed(input$seed)
nb.pts <- 5
# nb.pts <- 4
# x1 <- seq(1:input$x1)
# x1 <- seq(1:10)
catA <- data.frame(x = mean(x1) + runif(nb.pts, 0, 1),
y = mean(x1) + runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1) + runif(nb.pts, 0, 3),
y = mean(x1) + runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1) + runif(nb.pts, 2, 4),
y = mean(x1) + runif(nb.pts, 2, 4),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1) + runif(nb.pts, 3, 6),
y = mean(x1) + runif(nb.pts, 3, 6),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
# distances to the mean
dist.to.mean <- crossdist(df$x, df$y,
rep(mean(df$x), nrow(df)),
rep(mean(df$x), nrow(df)))
df$dist.to.mean <- dist.to.mean[ , 1]
df.colors <- data.frame(feat = c("A", "B", "C", "D"),
color = c("red", "green", "blue", "pink"))
df.rownames <- rownames(df)
# print(df.rownames)
df <- merge(df, df.colors, by = "feat", all.x = T)
df$lbl <- df.rownames
gc()
nb.pts <- 5
# nb.pts <- 4
# x1 <- seq(1:input$x1)
# x1 <- seq(1:10)
catA <- data.frame(x = mean(x1) + runif(nb.pts, 0, 1),
y = mean(x1) + runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1) + runif(nb.pts, 0, 3),
y = mean(x1) + runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1) + runif(nb.pts, 2, 4),
y = mean(x1) + runif(nb.pts, 2, 4),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1) + runif(nb.pts, 3, 6),
y = mean(x1) + runif(nb.pts, 3, 6),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
# distances to the mean
dist.to.mean <- crossdist(df$x, df$y,
rep(mean(df$x), nrow(df)),
rep(mean(df$x), nrow(df)))
df$dist.to.mean <- dist.to.mean[ , 1]
df.colors <- data.frame(feat = c("A", "B", "C", "D"),
color = c("red", "green", "blue", "pink"))
df.rownames <- rownames(df)
# print(df.rownames)
df <- merge(df, df.colors, by = "feat", all.x = T)
df$lbl <- df.rownames
df
catA <- data.frame(x = mean(x1) + runif(nb.pts, 0, 1),
y = mean(x1) + runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1) + runif(nb.pts, 0, 3),
y = mean(x1) + runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1) + runif(nb.pts, 2, 4),
y = mean(x1) + runif(nb.pts, 2, 4),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1) + runif(nb.pts, 3, 6),
y = mean(x1) + runif(nb.pts, 3, 6),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
x1 <- seq(1:10)
nb.pts <- 5
# nb.pts <- 4
# x1 <- seq(1:input$x1)
# x1 <- seq(1:10)
catA <- data.frame(x = mean(x1) + runif(nb.pts, 0, 1),
y = mean(x1) + runif(nb.pts, 0, 1),
feat = rep("A", nb.pts),
row.names = paste0(rep("A", nb.pts),".",seq(1,nb.pts)))
catB <- data.frame(x = mean(x1) + runif(nb.pts, 0, 3),
y = mean(x1) + runif(nb.pts, 0, 3),
feat = rep("B", nb.pts),
row.names = paste0(rep("B", nb.pts),".",seq(1,nb.pts)))
catC <- data.frame(x = mean(x1) + runif(nb.pts, 2, 4),
y = mean(x1) + runif(nb.pts, 2, 4),
feat = rep("C", nb.pts),
row.names = paste0(rep("C", nb.pts),".",seq(1,nb.pts)))
catD <- data.frame(x = mean(x1) + runif(nb.pts, 3, 6),
y = mean(x1) + runif(nb.pts, 3, 6),
feat = rep("D", nb.pts),
row.names = paste0(rep("D", nb.pts),".",seq(1,nb.pts)))
df <- rbind(catA, catB, catC, catD)
# distances to the mean
dist.to.mean <- crossdist(df$x, df$y,
rep(mean(df$x), nrow(df)),
rep(mean(df$x), nrow(df)))
df$dist.to.mean <- dist.to.mean[ , 1]
df.colors <- data.frame(feat = c("A", "B", "C", "D"),
color = c("red", "green", "blue", "pink"))
df.rownames <- rownames(df)
df.rownames
df.rownames <- rownames(df)
# print(df.rownames)
df <- merge(df, df.colors, by = "feat", all.x = T)
df$lbl <- df.rownames
df
ggplot(df, aes(y = 0, x = dist.to.mean, color = color)) +
geom_point(aes(size = 1.5)) +
geom_text_repel(aes(color = "black", label = lbl)) +
# geom_text(aes(y = 0, x = dist.to.mean, label = round(dist.to.mean, 2, cex = .5, vjust = .5))) +
theme_bw() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_color_identity(guide = "legend", name = "features", breaks = df$color, label = df$feat)
df
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
runApp('teachings/stats/stats/spat-nearest')
