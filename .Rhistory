ylim = c(0, max(Oxford.water.transport$OxfordPct)),
log='y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct.log,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
log='y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct.log,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct.log,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
# log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
# ylim = c(0, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
max(OxfordPots$OxfordPct)
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
# ylim = c(0, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
# ylim = c(0, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
max(OxfordPots$OxfordPct
)
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0.001, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0.001, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
# ylim = c(0.001, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
max(OxfordPots$OxfordPct)
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0.001, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab="Distance from Oxford kilns (miles)",
ylab="Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0.001, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
plot(1:10, xlim=c(0.001,10), ylim=c(0.001,10), log="xy")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
# xlim = c(0, max(OxfordPots$OxfordDst)),
ylim = c(0.001, max(OxfordPots$OxfordPct)),
log = 'y',
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
# log = 'y',
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
OxfordPots$OxfordPct.log <- log(OxfordPots$OxfordPct)
Oxford.water.transport <- subset(OxfordPots, WaterTrans == 1)
Oxford.water.transport.no <- subset(OxfordPots, WaterTrans == 0)
lm.water.transport <- lm(data = Oxford.water.transport,
formula = OxfordPct ~ OxfordDst)
lm.water.transport.no <- lm(data = Oxford.water.transport.no,
formula = OxfordPct ~ OxfordDst)
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
# log = 'y',
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct.log,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
# log = 'y',
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
library(archdata)
install.packages(archdata)
install.packages("archdata")
install.packages("archdata")
install.packages(archdata)
library(archdata)
OxfordPots
data("OxfordPots")
OxfordPots
data("OxfordPots")
data("OxfordPots")
?lm
OxfordPots$OxfordPct
log(OxfordPots$OxfordPct)
data("OxfordPots")
OxfordPots$OxfordPct.log <- log(OxfordPots$OxfordPct)
Oxford.water.transport <- subset(OxfordPots, WaterTrans == 1)
Oxford.water.transport.no <- subset(OxfordPots, WaterTrans == 0)
View(Oxford.water.transport.no)
View(Oxford.water.transport)
View(Oxford.water.transport.no)
OxfordPots$OxfordPct.log <- log(OxfordPots$OxfordPct)
Oxford.water.transport <- subset(OxfordPots, WaterTrans == 1)
Oxford.water.transport.no <- subset(OxfordPots, WaterTrans == 0)
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct.log,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct.log,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
detach("package:archdata", unload = TRUE)
library(archdata)
detach("package:archdata", unload = TRUE)
library(archdata)
data("OxfordPots")
OxfordPots$OxfordPct.log <- log(OxfordPots$OxfordPct)
Oxford.water.transport <- subset(OxfordPots, WaterTrans == 1)
Oxford.water.transport.no <- subset(OxfordPots, WaterTrans == 0)
plot(x = Oxford.water.transport$OxfordDst,
y = Oxford.water.transport$OxfordPct.log,
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
points(x = Oxford.water.transport.no$OxfordDst,
y = Oxford.water.transport.no$OxfordPct.log)
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport))
abline(lm(OxfordPct.log ~ OxfordDst, data = Oxford.water.transport.no))
xlim = c(0, max(Oxford.water.transport$OxfordDst)),
NA == TRUE
plot(x = Oxford.water.transport$OxfordDst, y = Oxford.water.transport$OxfordPct.log, xlim = c(0, max(Oxford.water.transport$OxfordDst)),
ylim = c(0, max(Oxford.water.transport$OxfordPct.log)),
pch = 16,
xlab = "Distance from Oxford kilns (miles)",
ylab = "Percentage of Oxford pottery (Logarithmic scale)")
library(eamenaR)
geojson_stat(stat.name = "geojson_fields", stat = "list_ids")
install.packages(archdata)
library(archdata)
library(eamenaR)
geojson_map(map.name = "caravanserail_plotly",
interactive = T,
export.plot = T,
dirOut = "C:/Rprojects/eamenaR/results/")
library(dplyr)
geojson_map(map.name = "caravanserail_plotly",
interactive = T,
export.plot = T,
dirOut = "C:/Rprojects/eamenaR/results/")
read.csv2("https://github.com/eamena-project/eamenaR/blob/main/inst/extdata/ids.csv")
read.csv2("https://raw.githubusercontent.com/eamena-project/eamenaR/main/inst/extdata/ids.csv")
read.csv("https://raw.githubusercontent.com/eamena-project/eamenaR/main/inst/extdata/ids.csv")
ids <- read.csv("https://raw.githubusercontent.com/eamena-project/eamenaR/main/inst/extdata/ids.csv")
kable(ids) %>%
kable_styling(full_width = FALSE, position = "center", font_size = 20) %>%
ids <- read.csv("https://raw.githubusercontent.com/eamena-project/eamenaR/main/inst/extdata/ids.csv")
kable(ids) %>%
kable_styling(full_width = FALSE, position = "center", font_size = 20)
library(shiny)
library(rmarkdown)
library(knitr)
library(kableExtra)
library(plotly)
library(archdata)
library(ggplot2)
library(DT)
library(dplyr)
library(eamenaR)
ids <- read.csv("https://raw.githubusercontent.com/eamena-project/eamenaR/main/inst/extdata/ids.csv")
kable(ids) %>%
kable_styling(full_width = FALSE, position = "center", font_size = 20)
library(shiny)
library(rmarkdown)
library(plotly)
library(ggtern)
library(plotly)
library(DT)
library(dplyr)
library(archdata)
library(kableExtra)
library(FactoMineR)
library(archdata)
library(reshape2)
library(eamenaR)
d <- hash::hash()
d <- ref_are_duplicates(d = d,
c("EAMENA-0207209", "EAMENA-0182057"),
selected.fields = c("Assessment Investigator - Actor",
"Assessment Activity Date",
"Resource Name",
"geometry"),
verbose = F)
d$are_duplicates
geojson.path = paste0(system.file(package = "eamenaR"), "/extdata/caravanserail.geojson")
geojson.path = paste0(system.file(package = "eamenaR"), "/extdata/caravanserail.geojson")
ids <- eamenaR::ref_ids(concept.name = "hp.id")
selected.fields <- c(ids, selected.fields, "resourceid")
selected.fields = c("Assessment Investigator - Actor",
"Assessment Activity Date",
"Resource Name",
"geometry")
geojson.path = paste0(system.file(package = "eamenaR"), "/extdata/caravanserail.geojson")
ids <- eamenaR::ref_ids(concept.name = "hp.id")
selected.fields <- c(ids, selected.fields, "resourceid")
ea.geojson <- geojsonsf::geojson_sf(geojson.path)
ea.geojson <- ea.geojson[ea.geojson[[ids]] %in% hp.list, selected.fields]
selected.fields = c("Assessment Investigator - Actor",
"Assessment Activity Date",
"Resource Name",
"geometry")
hp.list = c("EAMENA-0207209", "EAMENA-0182057")
geojson.path = paste0(system.file(package = "eamenaR"), "/extdata/caravanserail.geojson")
ids <- eamenaR::ref_ids(concept.name = "hp.id")
selected.fields <- c(ids, selected.fields, "resourceid")
ea.geojson <- geojsonsf::geojson_sf(geojson.path)
ea.geojson <- ea.geojson[ea.geojson[[ids]] %in% hp.list, selected.fields]
ea.geojson
ea.geojson <- geojsonsf::geojson_sf(geojson.path)
head(ea.geojson, 1)
Names <- c("سليم", "سعيد", "مجدى")
Names
selected.fields = c("Assessment Investigator - Actor",
"Assessment Activity Date",
"Resource Name",
"geometry")
hp.list = c("EAMENA-0207209", "EAMENA-0182057")
geojson.path = paste0(system.file(package = "eamenaR"), "/extdata/caravanserail.geojson")
ids <- eamenaR::ref_ids(concept.name = "hp.id")
selected.fields <- c(ids, selected.fields, "resourceid")
ea.geojson <- geojsonsf::geojson_sf(geojson.path)
ea.geojson <- ea.geojson[ea.geojson[[ids]] %in% hp.list, selected.fields]
ea.geojson
library(shiny)
library(rmarkdown)
library(plotly)
library(ggtern)
library(plotly)
library(DT)
library(dplyr)
library(archdata)
library(kableExtra)
library(FactoMineR)
library(archdata)
library(reshape2)
library(eamenaR)
library(geojson_sf)
library(geojsonsf)
?geojson_sf
ar.unicode <- "<U+06A9>"
ar.unicode
library(stringi)
ar.unicode <- "<U+06A9>"
cat(stri_unescape_unicode(gsub("<U\\+(....)>", "\\\\u\\1", ar.unicode)))
ea.geojson$`Resource Name`
cat(stri_unescape_unicode(gsub("<U\\+(....)>", "\\\\u\\1", ea.geojson$`Resource Name`)))
?stri_unescape_unicode
#| echo: false
# options(encoding = 'UTF-8')
selected.fields = c("Assessment Investigator - Actor",
"Assessment Activity Date",
"Resource Name",
"geometry")
hp.list = c("EAMENA-0207209", "EAMENA-0182057")
geojson.path = paste0(system.file(package = "eamenaR"), "/extdata/caravanserail.geojson")
ids <- eamenaR::ref_ids(concept.name = "hp.id")
selected.fields <- c(ids, selected.fields, "resourceid")
ea.geojson <- geojsonsf::geojson_sf(geojson.path)
ea.geojson[["Resource Name"]] <- cat(stri_unescape_unicode(gsub("<U\\+(....)>", "\\\\u\\1",
ea.geojson[["Resource Name"]])))
ea.geojson <- ea.geojson[ea.geojson[[ids]] %in% hp.list, selected.fields]
?gsub
#| echo: false
# options(encoding = 'UTF-8')
selected.fields = c("Assessment Investigator - Actor",
"Assessment Activity Date",
"Resource Name",
"geometry")
hp.list = c("EAMENA-0207209", "EAMENA-0182057")
geojson.path = paste0(system.file(package = "eamenaR"), "/extdata/caravanserail.geojson")
ids <- eamenaR::ref_ids(concept.name = "hp.id")
selected.fields <- c(ids, selected.fields, "resourceid")
ea.geojson <- geojsonsf::geojson_sf(geojson.path)
ea.geojson[["Resource Name"]] <- stringi::stri_unescape_unicode(gsub("<U\\+(....)>", "\\\\u\\1",
ea.geojson[["Resource Name"]]))
ea.geojson <- ea.geojson[ea.geojson[[ids]] %in% hp.list, selected.fields]
# ar <- c("سليم", "سعيد", "مجدى")
# ar.unicode <- "<U+06A9>"
# cat(stri_unescape_unicode(gsub("<U\\+(....)>", "\\\\u\\1", ea.geojson[["Resource Name"]])))
ea.geojson
ea.geojson[["Resource Name"]]
gp <- df.measure.type %>%
plotly::group_by(by) %>%
# do(p = plot_ly(., x = ~Sepal.Length, y = ~Sepal.Width, color = ~Species, type = "scatter")) %>%
plotly::do(p = plotly::plot_ly(.,
y = ~value,
type = "box",
boxpoints = "all",
color = ~lbl.by,
jitter = 0.5,
pointpos = -1.8,
hoverinfo = 'text',
hovertext = ~id)
) %>%
plotly::subplot(nrows = 1, shareX = TRUE, shareY = TRUE)
gp
gp <- iris %>%
plotly::group_by(by) %>%
# do(p = plot_ly(., x = ~Sepal.Length, y = ~Sepal.Width, color = ~Species, type = "scatter")) %>%
plotly::do(p = plotly::plot_ly(.,
y = ~value,
type = "box",
boxpoints = "all",
color = ~lbl.by,
jitter = 0.5,
pointpos = -1.8,
hoverinfo = 'text',
hovertext = ~id)
) %>%
plotly::subplot(nrows = 1, shareX = TRUE, shareY = TRUE)
gp
gp <- iris %>%
plotly::group_by(Species) %>%
# do(p = plot_ly(., x = ~Sepal.Length, y = ~Sepal.Width, color = ~Species, type = "scatter")) %>%
plotly::do(p = plotly::plot_ly(.,
y = ~value,
type = "box",
boxpoints = "all",
color = ~lbl.by,
jitter = 0.5,
pointpos = -1.8,
hoverinfo = 'text',
hovertext = ~id)
) %>%
plotly::subplot(nrows = 1, shareX = TRUE, shareY = TRUE)
gp
remove.packages("discourseGT", lib="~/R/win-library/4.1")
install.packages("discourseGT")
?devtools::test
devtools::test(pkg = "discourseGT")
devtools::test(pkg = system.file('extdata', package = 'discourseGT'))
system.file('extdata', package = 'discourseGT')
system.file(package = 'discourseGT')
devtools::test(pkg = system.file(package = 'discourseGT'))
devtools::test(pkg = system.file(package = 'discourseGT'))
system.file(package = 'discourseGT')
library(testthat)
library(discourseGT)
test_check("discourseGT")
getwd()
setwd("C:/Users/Thomas Huet/Documents/R/win-library/4.1/discourseGT")
getwd()
library(testthat)
library(discourseGT)
test_check("discourseGT")
devtools::test()
remove.packages("discourseGT", lib="~/R/win-library/4.1")
install.packages("discourseGT")
library(discourseGT)
