dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE)) %>%
formatStyle(
columns = c("Groups"),
backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
) %>%
# formatColumn(
#   'Groups',
#   value = function(value, row, data) {
#     sprintf('<a href="%s" target="_blank">%s</a>', data$URL[row], value)
#   }
# )
dt_widget
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE)) %>%
formatStyle(
columns = c("Groups"),
backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
)
# formatColumn(
#   'Groups',
#   value = function(value, row, data) {
#     sprintf('<a href="%s" target="_blank">%s</a>', data$URL[row], value)
#   }
# )
dt_widget
library(readxl)
library(DT)
library(htmlwidgets)
## Link level 1 with TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
df_filtered$URL <- paste0(base_url, gsub(" ", "%20", df_filtered$Groups), ".tsv")
a.group <- gsub(" ", "%20", df_filtered$Groups)
df_filtered$Groups <- paste0("<a href='", base_url, a.group, ".tsv' target='_blank'>", df_filtered$Groups, "</a>")
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE)) %>%
formatStyle(
columns = c("Groups"),
backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
)
dt_widget
# saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,  # Add escape = FALSE here
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE)) %>%
formatStyle(
columns = c("Groups"),
backgroundColor = styleEqual(levels = unique(df_filtered[["Groups"]]), values = df_filtered$color)
)
datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,  # Add escape = FALSE here
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE)) %>%
formatStyle(
columns = c("Groups"),
backgroundColor = styleEqual(levels = unique(df_filtered[["Groups"]]), values = df_filtered$color)
)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
dt_widget
df_filtered$Groups
library(DT)
library(readxl)
library(stringr)
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
dt_widget
library(DT)
library(readxl)
library(stringr)
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
dt_widget
# saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
## Link level 1 with TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
# base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
#
# mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
# mds.template <- paste0(mds.path, "mds-template.xlsx")
# df <- read_excel(mds.template, sheet = 1)
# df_filtered <- df[, c("level1", "color")]
# df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
# df_filtered <- df_filtered[!duplicated(df_filtered), ]
# colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
# df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# df_filtered$URL <- paste0(base_url, gsub(" ", "%20", df_filtered$Groups), ".tsv")
# a.group <- gsub(" ", "%20", df_filtered$Groups)
# df_filtered$Groups <- paste0("<a href='", base_url, a.group, ".tsv' target='_blank'>", df_filtered$Groups, "</a>")
#
# dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
#                        escape = FALSE,
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
#   )
# dt_widget
## HTML OK but no colors
# datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,  # Add escape = FALSE here
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(levels = unique(df_filtered[["Groups"]]), values = df_filtered$color)
#   )
library(DT)
library(readxl)
library(stringr)
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s padding: 5px;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
dt_widget
# saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
## Link level 1 with TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
# base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
#
# mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
# mds.template <- paste0(mds.path, "mds-template.xlsx")
# df <- read_excel(mds.template, sheet = 1)
# df_filtered <- df[, c("level1", "color")]
# df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
# df_filtered <- df_filtered[!duplicated(df_filtered), ]
# colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
# df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# df_filtered$URL <- paste0(base_url, gsub(" ", "%20", df_filtered$Groups), ".tsv")
# a.group <- gsub(" ", "%20", df_filtered$Groups)
# df_filtered$Groups <- paste0("<a href='", base_url, a.group, ".tsv' target='_blank'>", df_filtered$Groups, "</a>")
#
# dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
#                        escape = FALSE,
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
#   )
# dt_widget
## HTML OK but no colors
# datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,  # Add escape = FALSE here
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(levels = unique(df_filtered[["Groups"]]), values = df_filtered$color)
#   )
library(DT)
library(readxl)
library(stringr)
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s; padding: 5px;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
dt_widget
# saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
## Link level 1 with TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
# base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
#
# mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
# mds.template <- paste0(mds.path, "mds-template.xlsx")
# df <- read_excel(mds.template, sheet = 1)
# df_filtered <- df[, c("level1", "color")]
# df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
# df_filtered <- df_filtered[!duplicated(df_filtered), ]
# colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
# df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# df_filtered$URL <- paste0(base_url, gsub(" ", "%20", df_filtered$Groups), ".tsv")
# a.group <- gsub(" ", "%20", df_filtered$Groups)
# df_filtered$Groups <- paste0("<a href='", base_url, a.group, ".tsv' target='_blank'>", df_filtered$Groups, "</a>")
#
# dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
#                        escape = FALSE,
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
#   )
# dt_widget
## HTML OK but no colors
# datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,  # Add escape = FALSE here
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(levels = unique(df_filtered[["Groups"]]), values = df_filtered$color)
#   )
library(DT)
library(readxl)
library(stringr)
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered$color <- paste0(df_filtered$color, "77")
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s; padding: 5px;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
dt_widget
# saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
## Link level 1 with TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
# base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
#
# mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
# mds.template <- paste0(mds.path, "mds-template.xlsx")
# df <- read_excel(mds.template, sheet = 1)
# df_filtered <- df[, c("level1", "color")]
# df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
# df_filtered <- df_filtered[!duplicated(df_filtered), ]
# colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
# df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# df_filtered$URL <- paste0(base_url, gsub(" ", "%20", df_filtered$Groups), ".tsv")
# a.group <- gsub(" ", "%20", df_filtered$Groups)
# df_filtered$Groups <- paste0("<a href='", base_url, a.group, ".tsv' target='_blank'>", df_filtered$Groups, "</a>")
#
# dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
#                        escape = FALSE,
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
#   )
# dt_widget
## HTML OK but no colors
# datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,  # Add escape = FALSE here
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(levels = unique(df_filtered[["Groups"]]), values = df_filtered$color)
#   )
library(DT)
library(readxl)
library(stringr)
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered$color <- paste0(df_filtered$color, "90")
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s; padding: 5px;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
dt_widget
# saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
## Link level 1 with TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
# base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
#
# mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
# mds.template <- paste0(mds.path, "mds-template.xlsx")
# df <- read_excel(mds.template, sheet = 1)
# df_filtered <- df[, c("level1", "color")]
# df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
# df_filtered <- df_filtered[!duplicated(df_filtered), ]
# colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
# df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# df_filtered$URL <- paste0(base_url, gsub(" ", "%20", df_filtered$Groups), ".tsv")
# a.group <- gsub(" ", "%20", df_filtered$Groups)
# df_filtered$Groups <- paste0("<a href='", base_url, a.group, ".tsv' target='_blank'>", df_filtered$Groups, "</a>")
#
# dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
#                        escape = FALSE,
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
#   )
# dt_widget
## HTML OK but no colors
# datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,  # Add escape = FALSE here
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(levels = unique(df_filtered[["Groups"]]), values = df_filtered$color)
#   )
library(DT)
library(readxl)
library(stringr)
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered$color <- paste0(df_filtered$color, "95")
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s; padding: 5px;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
dt_widget
# saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
## Link level 1 with TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
# base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
#
# mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
# mds.template <- paste0(mds.path, "mds-template.xlsx")
# df <- read_excel(mds.template, sheet = 1)
# df_filtered <- df[, c("level1", "color")]
# df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
# df_filtered <- df_filtered[!duplicated(df_filtered), ]
# colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
# df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# df_filtered$URL <- paste0(base_url, gsub(" ", "%20", df_filtered$Groups), ".tsv")
# a.group <- gsub(" ", "%20", df_filtered$Groups)
# df_filtered$Groups <- paste0("<a href='", base_url, a.group, ".tsv' target='_blank'>", df_filtered$Groups, "</a>")
#
# dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE],
#                        escape = FALSE,
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(df_filtered[["Groups"]], df_filtered$color)
#   )
# dt_widget
## HTML OK but no colors
# datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,  # Add escape = FALSE here
#                        rownames = FALSE,
#                        options = list(pageLength = 25, autoWidth = TRUE)) %>%
#   formatStyle(
#     columns = c("Groups"),
#     backgroundColor = styleEqual(levels = unique(df_filtered[["Groups"]]), values = df_filtered$color)
#   )
library(DT)
library(readxl)
library(stringr)
## Link level 1 (groups), color groups, add hyperlinks to TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered$color <- paste0(df_filtered$color, "95")
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s; padding: 5px;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(pageLength = 25, autoWidth = TRUE))
# dt_widget
saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
library(DT)
library(readxl)
library(stringr)
## Link level 1 (groups), color groups, add hyperlinks to TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered$color <- paste0(df_filtered$color, "95")
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s; padding: 5px;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE)
# dt_widget
# saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
dt_widget
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(paging = FALSE, searching = FALSE, info = FALSE, autoWidth = TRUE))
dt_widget
library(DT)
library(readxl)
library(stringr)
## Link level 1 (groups), color groups, add hyperlinks to TSVs
# ex: https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_Condition%20Assessment.tsv
base_url <- "https://github.com/eamena-project/eamena-arches-dev/blob/main/data/bulk/templates/doc/bu_"
mds.path <- "C:/Rprojects/eamena-arches-dev/dbs/database.eamena/data/reference_data/mds/"
mds.template <- paste0(mds.path, "mds-template.xlsx")
df <- read_excel(mds.template, sheet = 1)
df_filtered <- df[, c("level1", "color")]
df_filtered$color <- sub("^(.{7}).*", "\\1", df_filtered$color)
df_filtered$color <- paste0(df_filtered$color, "95")
df_filtered <- df_filtered[!duplicated(df_filtered), ]
colnames(df_filtered)[colnames(df_filtered) == 'level1'] <- 'Groups'
df_filtered$Groups <- stringr::str_to_title(df_filtered$Groups)
# Apply the color and hyperlink together
df_filtered$Groups <- mapply(function(group, color) {
sprintf("<a href='%s%s.tsv' target='_blank' style='background-color:%s; padding: 5px;'>%s</a>",
base_url, gsub(" ", "%20", group), color, group)
}, df_filtered$Groups, df_filtered$color)
dt_widget <- datatable(df_filtered[ , c("Groups"), drop=FALSE], escape = FALSE,
rownames = FALSE,
options = list(paging = FALSE, searching = FALSE, info = FALSE, autoWidth = TRUE))
# dt_widget
saveWidget(dt_widget, paste0(mds.path, '/field-to-tsv.html'), selfcontained = TRUE)
