weight = 1,
radius = 5,
popup = ~Place,
color = "red",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("Ortho", "OSM"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
leaflet(Place.coords) %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addCircleMarkers(
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("Ortho", "OSM"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
leaflet(Place.coords) %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addCircleMarkers(
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("Ortho", "OSM"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
leaflet(Place.coords) %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addCircleMarkers(
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("Ortho", "OSM"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
leaflet(Place.coords) %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addCircleMarkers(
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("Ortho", "OSM"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
leaflet(Place.coords) %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addCircleMarkers(
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("OSM", "Ortho"),
position = "topright") %>%
addScaleBar(position = "bottomright")
shiny::runApp('teachings/stats/_stats/dim2')
runApp('teachings/stats/_stats/dim2')
shiny::runApp('teachings/stats/_stats/dim2')
runApp('teachings/stats/_stats/dim2/app_1.R')
runApp('teachings/stats/_stats/dim2/app_1.R')
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Oxford.water <- subset(OxfordPots, WaterTrans == 1)
Oxford.lm.water <- lm(log(OxfordPct)~OxfordDst, Oxford.water)
lm.water <- lm(OxfordPct ~ OxfordDst, data = Oxford.water)
# lm.water.R2 <- round(summary(lm.water)$r.squared, 2)
r2.water <- round(summary(lm.water)$r.squared, 2)
Oxford.water$predicted <- predict(lm.water)   # Save the predicted values
Oxford.water$residuals <- residuals(lm.water) # Save the residual values
water.values <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", Oxford.water$OxfordPct)
water.residuals <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", round(Oxford.water$predicted, 2))
# no water
Oxford.nowater <- subset(OxfordPots, WaterTrans == 0)
Oxford.lm.nowater <- lm(log(OxfordPct)~OxfordDst, Oxford.nowater)
lm.nowater <- lm(OxfordPct ~ OxfordDst, data = Oxford.nowater)
r2.nowater <- round(summary(lm.nowater)$r.squared, 2)
# lm.nowater.R2 <- round(summary(lm.nowater)$r.squared, 2)
Oxford.nowater$predicted <- predict(lm.nowater)   # Save the predicted values
Oxford.nowater$residuals <- residuals(lm.nowater) # Save the residual values
nowater.values <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", Oxford.nowater$OxfordPct)
nowater.residuals <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", round(Oxford.nowater$predicted, 2))
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
leaflet(Place.coords) %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addCircleMarkers(
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("OSM", "Ortho"),
position = "topright") %>%
addScaleBar(position = "bottomright")
View(Place.coords)
df.nowater <- merge(Oxford.nowater, Place.coords, by = "Place")
View(df.nowater)
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Oxford.water <- subset(OxfordPots, WaterTrans == 1)
Oxford.lm.water <- lm(log(OxfordPct)~OxfordDst, Oxford.water)
lm.water <- lm(OxfordPct ~ OxfordDst, data = Oxford.water)
# lm.water.R2 <- round(summary(lm.water)$r.squared, 2)
r2.water <- round(summary(lm.water)$r.squared, 2)
Oxford.water$predicted <- predict(lm.water)   # Save the predicted values
Oxford.water$residuals <- residuals(lm.water) # Save the residual values
water.values <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", Oxford.water$OxfordPct)
water.residuals <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", round(Oxford.water$predicted, 2))
# no water
Oxford.nowater <- subset(OxfordPots, WaterTrans == 0)
Oxford.lm.nowater <- lm(log(OxfordPct)~OxfordDst, Oxford.nowater)
lm.nowater <- lm(OxfordPct ~ OxfordDst, data = Oxford.nowater)
r2.nowater <- round(summary(lm.nowater)$r.squared, 2)
# lm.nowater.R2 <- round(summary(lm.nowater)$r.squared, 2)
Oxford.nowater$predicted <- predict(lm.nowater)   # Save the predicted values
Oxford.nowater$residuals <- residuals(lm.nowater) # Save the residual values
nowater.values <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", Oxford.nowater$OxfordPct)
nowater.residuals <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", round(Oxford.nowater$predicted, 2))
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
df.nowater <- merge(Oxford.nowater, Place.coords, by = "Place")
df.water <- merge(Oxford.water, Place.coords, by = "Place")
leaflet(Place.coords) %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addCircleMarkers(data = df.water,
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addCircleMarkers(data = df.nowater,
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("OSM", "Ortho"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Oxford.water <- subset(OxfordPots, WaterTrans == 1)
Oxford.lm.water <- lm(log(OxfordPct)~OxfordDst, Oxford.water)
lm.water <- lm(OxfordPct ~ OxfordDst, data = Oxford.water)
# lm.water.R2 <- round(summary(lm.water)$r.squared, 2)
r2.water <- round(summary(lm.water)$r.squared, 2)
Oxford.water$predicted <- predict(lm.water)   # Save the predicted values
Oxford.water$residuals <- residuals(lm.water) # Save the residual values
water.values <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", Oxford.water$OxfordPct)
water.residuals <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", round(Oxford.water$predicted, 2))
# no water
Oxford.nowater <- subset(OxfordPots, WaterTrans == 0)
Oxford.lm.nowater <- lm(log(OxfordPct)~OxfordDst, Oxford.nowater)
lm.nowater <- lm(OxfordPct ~ OxfordDst, data = Oxford.nowater)
r2.nowater <- round(summary(lm.nowater)$r.squared, 2)
# lm.nowater.R2 <- round(summary(lm.nowater)$r.squared, 2)
Oxford.nowater$predicted <- predict(lm.nowater)   # Save the predicted values
Oxford.nowater$residuals <- residuals(lm.nowater) # Save the residual values
nowater.values <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", Oxford.nowater$OxfordPct)
nowater.residuals <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", round(Oxford.nowater$predicted, 2))
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
df.nowater <- merge(Oxford.nowater, Place.coords, by = "Place")
df.water <- merge(Oxford.water, Place.coords, by = "Place")
leaflet(Place.coords) %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addCircleMarkers(data = df.water,
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addCircleMarkers(data = df.nowater,
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "red",
fillOpacity = 1,
opacity = 1) %>%
addLayersControl(
baseGroups = c("OSM", "Ortho"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Oxford.water <- subset(OxfordPots, WaterTrans == 1)
Oxford.lm.water <- lm(log(OxfordPct)~OxfordDst, Oxford.water)
lm.water <- lm(OxfordPct ~ OxfordDst, data = Oxford.water)
# lm.water.R2 <- round(summary(lm.water)$r.squared, 2)
r2.water <- round(summary(lm.water)$r.squared, 2)
Oxford.water$predicted <- predict(lm.water)   # Save the predicted values
Oxford.water$residuals <- residuals(lm.water) # Save the residual values
water.values <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", Oxford.water$OxfordPct)
water.residuals <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", round(Oxford.water$predicted, 2))
# no water
Oxford.nowater <- subset(OxfordPots, WaterTrans == 0)
Oxford.lm.nowater <- lm(log(OxfordPct)~OxfordDst, Oxford.nowater)
lm.nowater <- lm(OxfordPct ~ OxfordDst, data = Oxford.nowater)
r2.nowater <- round(summary(lm.nowater)$r.squared, 2)
# lm.nowater.R2 <- round(summary(lm.nowater)$r.squared, 2)
Oxford.nowater$predicted <- predict(lm.nowater)   # Save the predicted values
Oxford.nowater$residuals <- residuals(lm.nowater) # Save the residual values
nowater.values <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", Oxford.nowater$OxfordPct)
nowater.residuals <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", round(Oxford.nowater$predicted, 2))
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
df.nowater <- merge(Oxford.nowater, Place.coords, by = "Place")
df.water <- merge(Oxford.water, Place.coords, by = "Place")
leaflet(Place.coords) %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addCircleMarkers(data = df.water,
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "blue",
fillOpacity = 1,
opacity = 1) %>%
addCircleMarkers(data = df.nowater,
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 5,
popup = ~Place,
color = "black",
fillOpacity = 0,
stroke = TRUE,
opacity = 1) %>%
addLayersControl(
baseGroups = c("OSM", "Ortho"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Oxford.water <- subset(OxfordPots, WaterTrans == 1)
Oxford.lm.water <- lm(log(OxfordPct)~OxfordDst, Oxford.water)
lm.water <- lm(OxfordPct ~ OxfordDst, data = Oxford.water)
# lm.water.R2 <- round(summary(lm.water)$r.squared, 2)
r2.water <- round(summary(lm.water)$r.squared, 2)
Oxford.water$predicted <- predict(lm.water)   # Save the predicted values
Oxford.water$residuals <- residuals(lm.water) # Save the residual values
water.values <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", Oxford.water$OxfordPct)
water.residuals <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", round(Oxford.water$predicted, 2))
# no water
Oxford.nowater <- subset(OxfordPots, WaterTrans == 0)
Oxford.lm.nowater <- lm(log(OxfordPct)~OxfordDst, Oxford.nowater)
lm.nowater <- lm(OxfordPct ~ OxfordDst, data = Oxford.nowater)
r2.nowater <- round(summary(lm.nowater)$r.squared, 2)
# lm.nowater.R2 <- round(summary(lm.nowater)$r.squared, 2)
Oxford.nowater$predicted <- predict(lm.nowater)   # Save the predicted values
Oxford.nowater$residuals <- residuals(lm.nowater) # Save the residual values
nowater.values <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", Oxford.nowater$OxfordPct)
nowater.residuals <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", round(Oxford.nowater$predicted, 2))
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
df.nowater <- merge(Oxford.nowater, Place.coords, by = "Place")
df.water <- merge(Oxford.water, Place.coords, by = "Place")
leaflet(Place.coords) %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addCircleMarkers(data = df.water,
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 4,
popup = ~Place,
color = "black",
fillOpacity = 1,
opacity = 1) %>%
addCircleMarkers(data = df.nowater,
lng = ~lon,
lat = ~lat,
weight = 2,
radius = 4,
popup = ~Place,
color = "black",
fillOpacity = 0,
stroke = TRUE,
opacity = 1) %>%
addLayersControl(
baseGroups = c("OSM", "Ortho"),
position = "topright") %>%
addScaleBar(position = "bottomright")
# Teaching app
# data with 2 dimensions
library(plotly)
library(archdata)
library(leaflet)
data(OxfordPots)
Oxford.water <- subset(OxfordPots, WaterTrans == 1)
Oxford.lm.water <- lm(log(OxfordPct)~OxfordDst, Oxford.water)
lm.water <- lm(OxfordPct ~ OxfordDst, data = Oxford.water)
# lm.water.R2 <- round(summary(lm.water)$r.squared, 2)
r2.water <- round(summary(lm.water)$r.squared, 2)
Oxford.water$predicted <- predict(lm.water)   # Save the predicted values
Oxford.water$residuals <- residuals(lm.water) # Save the residual values
water.values <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", Oxford.water$OxfordPct)
water.residuals <- paste0("<b>", Oxford.water$Place, "</b><br>",
"Observed: ", round(Oxford.water$predicted, 2))
# no water
Oxford.nowater <- subset(OxfordPots, WaterTrans == 0)
Oxford.lm.nowater <- lm(log(OxfordPct)~OxfordDst, Oxford.nowater)
lm.nowater <- lm(OxfordPct ~ OxfordDst, data = Oxford.nowater)
r2.nowater <- round(summary(lm.nowater)$r.squared, 2)
# lm.nowater.R2 <- round(summary(lm.nowater)$r.squared, 2)
Oxford.nowater$predicted <- predict(lm.nowater)   # Save the predicted values
Oxford.nowater$residuals <- residuals(lm.nowater) # Save the residual values
nowater.values <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", Oxford.nowater$OxfordPct)
nowater.residuals <- paste0("<b>", Oxford.nowater$Place, "</b><br>",
"Observed: ", round(Oxford.nowater$predicted, 2))
Place.coords.path <- "C:/Rprojects/thomashuet/teachings/stats/_stats/dim2/oxfordpots_data.xlsx"
Place.coords <- openxlsx::read.xlsx(Place.coords.path, 1)
Place.coords <- Place.coords[ , c("Place", "lon", "lat")]
Place.coords[, c("lon", "lat")] <- sapply(Place.coords[, c("lon", "lat")], as.numeric)
df.nowater <- merge(Oxford.nowater, Place.coords, by = "Place")
df.water <- merge(Oxford.water, Place.coords, by = "Place")
leaflet(Place.coords) %>%
addProviderTiles(providers$"OpenStreetMap", group = "OSM") %>%
addProviderTiles(providers$"Esri.WorldImagery", group = "Ortho") %>%
addCircleMarkers(data = df.water,
lng = ~lon,
lat = ~lat,
weight = 1,
radius = 4,
popup = ~Place,
color = "black",
fillOpacity = 1,
opacity = 1) %>%
addCircleMarkers(data = df.nowater,
lng = ~lon,
lat = ~lat,
weight = 2,
radius = 4,
popup = ~Place,
color = "black",
fillOpacity = 0,
stroke = TRUE,
opacity = 1) %>%
addLayersControl(
baseGroups = c("OSM", "Ortho"),
position = "topright") %>%
addScaleBar(position = "bottomright")
abs(-1)
runApp('teachings/stats/_stats/dim2-map')
?leaflet
runApp('teachings/stats/_stats/dim2-map')
library(archdata)
data(OxfordPots)
View(OxfordPots)
cat(OxfordPots[!is.na(OxfordPots$NewForestPct), "Place"], sep = ",")
cat(OxfordPots[!is.na(OxfordPots$NewForestPct), "Place"], sep = ", ")
citation("archdata")
cat(OxfordPots[!is.na(OxfordPots$OxfordPct), "Place"], sep = ", ")
shiny::runApp('teachings/stats/_stats/dim2')
